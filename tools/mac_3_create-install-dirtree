#!/usr/bin/env bash

# Packages SCONE build artifacts into a standalone directory that
# is *roughly* suitable for OSX
#
# OSX 3rd-party applications are assembled into <application>.app dirs. These
# are effectively just structured directories that OSX knows how to parse
#
# The stackoverflow post I used to write this:
#
#     https://stackoverflow.com/questions/1596945/building-osx-app-bundle
#
# Describes the structure of .app directories as:
#
# sconestudio.app/
#     Contents/
#         Info.plist
#         MacOS/
#             sconestudio
#             all_the_other_shit/
#         Resources/
#              sconestudio.icns
#
# Where `Info.plist` is an XML metadata file that describes the "package". See
# the SO post, or any app you have in /Applications, to find out more about
# that.
#
# This script reassembles the build artifacts from the SCONE build into a `.app`
# dir that OSX supports.
#
# APP vs DMG in osx:
#
#      The resulting directory can just be copied into /Applications *et voila*
#      SCONE is installed. However, it's hard to download directories over the
#      internet, so most applciation developers dump the app dir into a DMG
#      file (effectively, a mountable archive) which users then mount. Once the
#      archive is mounted, the user copies the `.app` directory in the DMG to 
#      their `/Applications` dir.

set -xeuo pipefail
source ./tools/linux_config  # sets relevant envvar defaults

base_dir="${SCONE_BUILD_DIR}/mac"
app_dir="${SCONE_BUILD_DIR}/sconestudio.app"

# sconestudio.app/
mkdir -p "${app_dir}"
# sconestudio.app/Contents/
mkdir -p "${app_dir}/Contents/"

# sconestudio.app/Contents/Info.plist
cat <<EOF > "${app_dir}/Contents/Info.plist"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>CFBundleGetInfoString</key>
  <string>sconestudio</string>
  <key>CFBundleExecutable</key>
  <string>sconestudio</string>
  <key>CFBundleIdentifier</key>
  <string>software.scone</string>
  <key>CFBundleName</key>
  <string>sconestudio</string>
  <key>CFBundleIconFile</key>
  <string>scone.icns</string>
  <key>CFBundleShortVersionString</key>
  <string>0.01</string>
  <key>CFBundleInfoDictionaryVersion</key>
  <string>6.0</string>
  <key>CFBundlePackageType</key>
  <string>APPL</string>
  <key>IFMajorVersion</key>
  <integer>0</integer>
  <key>IFMinorVersion</key>
  <integer>1</integer>
</dict>
</plist>
EOF

# sconestudio.app/Contents/Resources
mkdir -p "${app_dir}/Contents/Resources/"
cp "${PROJECT_DIR}/resources/ui/scone_logo_256x256.icns" "${app_dir}/Contents/Resources/scone.icns"

# sconestudio.app/Contents/MacOS
mkdir -p "${app_dir}/Contents/MacOS/"

# sconestudio.app/Contents/MacOS/sconestudio
cat <<EOF > "${app_dir}/Contents/MacOS/sconestudio"
#!/usr/bin/env bash

# ensure the dynamic linker can find bundled libs
export DYLD_FALLBACK_LIBRARY_PATH=\${BASH_SOURCE%/*}/lib
export DYLD_LIBRARY_PATH=\${BASH_SOURCE%/*}/lib:\${DYLD_LIBRARY_PATH}

# add all SCONE exes onto the PATH so that the application name
# appears non-absolute when queried via argv[0] *but* the working
# dir is still wherever the caller ran this script
export PATH="\${BASH_SOURCE%/*}/bin:\${PATH}"

sconestudio "\$@"
EOF
chmod +x "${app_dir}/Contents/MacOS/sconestudio"


# sconestudio.app/Contents/MacOS/bin/
mkdir -p "${app_dir}/Contents/MacOS/bin/"
for exe in $(find "${SCONE_BUILD_DIR}/bin" -type f); do
    cp -a "${exe}" "${app_dir}/Contents/MacOS/bin/"
done
chmod +x ${app_dir}/Contents/MacOS/bin/*

# sconestudio.app/Contents/MacOS/lib
lib_dir="${app_dir}/Contents/MacOS/lib/"
mkdir -p "${lib_dir}"
find "${SCONE_BUILD_DIR}/" -name "*.dylib" -exec cp -a {} "${lib_dir}" \;
find "${OPENSIM3_INSTALL_PATH}/lib" -name "*.dylib*" -exec cp -a {} "${lib_dir}" \;
find "${OSG_INSTALL_PATH}/" -name "*.dylib*" -exec cp -a {} "${lib_dir}" \;
# for some reason, osg creates .so plugin files--even in mac--that the runtime
# depends on
find "${OSG_INSTALL_PATH}/" -name "*.so" -exec cp -a {} "${lib_dir}" \;

# sconestudio.app/Contents/MacOS/resources
mkdir -p "${app_dir}/Contents/MacOS/resources/"
cp -r ${PROJECT_DIR}/resources/* "${app_dir}/Contents/MacOS/resources/"

# sconestudio.app/Contents/MacOS/.version
# (needed by SCONE to boot)
git rev-list --count HEAD > "${app_dir}/Contents/MacOS/.version"

